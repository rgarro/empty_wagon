<style>
#experiment {
  -webkit-perspective: 800px;
  -webkit-perspective-origin: 50% 200px;
  -moz-perspective: 800px;
  -moz-perspective-origin: 50% 200px;
  perspective: 800px;
  perspective-origin: 50% 200px;
}

#cube {
  position: relative;
  margin: 100px auto;
  height: 400px;
  width: 400px;
  -webkit-transition: -webkit-transform 2s linear;
  -webkit-transform-style: preserve-3d;
  -moz-transition: -moz-transform 2s linear;
  -moz-transform-style: preserve-3d;
  transition: transform 2s linear;
  transform-style: preserve-3d;
}

.face {
  position: absolute;
  height: 360px;
  width: 360px;
  padding: 20px;
  background-color: rgba(50, 50, 50, 0.7);
  font-size: 27px;
  line-height: 1em;
  color: #fff;
  border: 1px solid #555;
  border-radius: 3px;
}

#cube .one  {
  -webkit-transform: rotateX(90deg) translateZ(200px);
  -moz-transform: rotateX(90deg) translateZ(200px);
  transform: rotateX(90deg) translateZ(200px);
}

#cube .two {
  -webkit-transform: translateZ(200px);
  -moz-transform: translateZ(200px);
  transform: translateZ(200px);
}

#cube .three {
  -webkit-transform: rotateY(90deg) translateZ(200px);
  -moz-transform: rotateY(90deg) translateZ(200px);
  transform: rotateY(90deg) translateZ(200px);
}

#cube .four {
  -webkit-transform: rotateY(180deg) translateZ(200px);
  -moz-transform: rotateY(180deg) translateZ(200px);
  transform: rotateY(180deg) translateZ(200px);
}

#cube .five {
  -webkit-transform: rotateY(-90deg) translateZ(200px);
  -moz-transform: rotateY(-90deg) translateZ(200px);
  transform: rotateY(-90deg) translateZ(200px);
}

#cube .six {
  -webkit-transform: rotateX(-90deg) rotate(180deg) translateZ(200px);
  -moz-transform: rotateX(-90deg) rotate(180deg) translateZ(200px);
  transform: rotateX(-90deg) rotate(180deg) translateZ(200px);
}

</style>
<script type="text/javascript">

  /*function onLoad() {
	var game = new example22("container");
console.log(game);	
	game.play();	
	}*/
	
var renderer = null, 
		scene = null, 
		camera = null,
		cube = null,
		animating = false;
	
	function onLoad()
	{
		// Grab our container div
        var container = document.getElementById("container");

        // Create the Three.js renderer, add it to our div
	    renderer = new THREE.WebGLRenderer( { antialias: true } );
	    renderer.setSize(container.offsetWidth, container.offsetHeight);
	    container.appendChild( renderer.domElement );

	    // Create a new Three.js scene
	    scene = new THREE.Scene();

	    // Put in a camera
        camera = new THREE.PerspectiveCamera( 45, container.offsetWidth / container.offsetHeight, 1, 4000 );
        camera.position.set( 0, 0, 3 );

        // Create a directional light to show off the object
		var light = new THREE.DirectionalLight( 0xffffff, 1.5);
		light.position.set(0, 0, 1);
		scene.add( light );

        // Create a shaded, texture-mapped cube and add it to the scene
        // First, create the texture map
        var mapUrl = "/img/redHare.png";
        var map = THREE.ImageUtils.loadTexture(mapUrl);
        
        // Now, create a Phong material to show shading; pass in the map
        var material = new THREE.MeshPhongMaterial({ map: map });

        // Create the cube geometry
        var geometry = new THREE.CubeGeometry(1, 1, 1);

        // And put the geometry and material together into a mesh
        cube = new THREE.Mesh(geometry, material);

        // Turn it toward the scene, or we won't see the cube shape!
        cube.rotation.x = Math.PI / 5;
        cube.rotation.y = Math.PI / 5;

        // Add the cube to our scene
        scene.add( cube );

        // Add a mouse up handler to toggle the animation
        addMouseHandler();

        // Run our render loop
        run();
	}

	function run()
	{
		// Render the scene
		renderer.render( scene, camera );

		// Spin the cube for next frame
		if (animating)
		{
			cube.rotation.y -= 0.01;
		}
			cube.rotation.y -= 0.01;
		// Ask for another frame
    	requestAnimationFrame(run);	
	}

	function addMouseHandler()
	{
		var dom = renderer.domElement;
		
		dom.addEventListener( 'mouseup', onMouseUp, false);
	}
	
	function onMouseUp	(event)
	{
	    event.preventDefault();

	    animating = !animating;
	}	

</script>
<div class="row">
	<div class="col-md-4">
		<div class="bw pic">
		<img class="img-rounded" src="/img/GuanYu.jpg"/>
		</div>
	</div>
	<div class="col-md-8">
	
	<body class="experiment">
    <div class="wrapper">
        <small>
           <i class="fa fa-chevron-left"></i> <i class="fa fa-keyboard-o"></i> USE ARROW KEYS <i class="fa fa-chevron-right"></i>
        </small>
<div id="experiment">
    <div id="cube">
        <div class="face one">
            <h3>Porfolio:</h3>
<a href="http://tilapya-11303.herokuapp.com/" target="_blank">http://tilapya-11303.herokuapp.com/</a>
 
        </div>
        <div class="face two">
           <i class="fa fa-keyboard-o"></i> Up, down, left, right
        </div>
        <div class="face three">
        <h4>Javascript</h4>
<a href="" target="_blank">https://github.com/rgarro/Route32</a>
<a href="" target="_blank">https://github.com/rgarro/PacPreloader</a>
 
		</div>
        <div class="face four">
            <h4>Ruby</h4>
<a href="" target="_blank">https://github.com/rgarro/SportsData_Nascar</a>
 
<h4>ActionScript</h4>
<a href="" target="_blank">https://github.com/rgarro/Odessa_Defender</a>   
        </div>
        <div class="face five">
            <h4>PHP</h4>
<a href="" target="_blank">https://github.com/rgarro/Wachico</a>
<a href="" target="_blank">https://github.com/rgarro/miniVan</a>
        </div>
        <div class="face six">
            <img src="images/sonic.gif" />
        </div>
    </div>
</div>

    </div>
    <script src="http://ajax.googleapis.com/ajax/libs/jquery/1.9.0/jquery.min.js"></script>
    <script src="js/experiment.js"></script>
</body>

    </div>
</div>
<script>
var props = 'transform WebkitTransform MozTransform OTransform msTransform'.split(' '),
    prop,
    el = document.createElement('div');

for(var i = 0, l = props.length; i < l; i++) {
    if(typeof el.style[props[i]] !== "undefined") {
        prop = props[i];
        break;
    }
}

var xAngle = 0, yAngle = 0;

window.setTimeout(function(){
	yAngle -= 90;
	document.getElementById('cube').style[prop] = "rotateX("+xAngle+"deg) rotateY("+yAngle+"deg)";
},4000);

$('body').keydown(function(evt) {
    switch(evt.keyCode) {
        case 37: // left
            yAngle -= 90;
            break;

        case 38: // up
            xAngle += 90;
            evt.preventDefault();
            break;

        case 39: // right
            yAngle += 90;
            break;

        case 40: // down
            xAngle -= 90;
            evt.preventDefault();
            break;
    };
    document.getElementById('cube').style[prop] = "rotateX("+xAngle+"deg) rotateY("+yAngle+"deg)";
});

$(document).ready(function(){
});
</script>